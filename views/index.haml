!!!
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %meta{:content => "IE=Edge,chrome=1", "http-equiv" => "X-UA-Compatible"}/
    %meta{:content => "width=device-width, initial-scale=1.0", :name => "viewport"}/
    %link{:href=>"//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css", :rel=>"stylesheet"}
    %link{:href=>"//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css", :rel=>"stylesheet"}
    %title WDFAC
    %meta{:content => "A portfolio website of a software engineer", :name => "description"}/
    %meta{:content => "Bryan Bibat | Robot Zombie Software Developer", :property => "og:title"}/
    %meta{:content => "A portfolio website of a software engineer", :property => "og:description"}/
    %meta{:content => "website", :property => "og:type"}/
    %meta{:content => "http://bryanbibat.net/", :property => "og:url"}/
    :css
      td { 
        background: #d18b47;
        text-align: center;
      }
      .fa-sun-o {
        color: #d18b47;
      }
      td.r-draw {
        background: lightyellow;
      }
      td.r-draw i.fa-sun-o {
        color: red;
      }
      td.r-win {
        background: green;
      }
      td.r-win i.fa-sun-o {
        color: green;
      }
      td.r-lose {
        background: red;
      }
      td.r-lose i.fa-sun-o {
        color: red;
      }
      td.score-space {
        background: white;
      }

      .fa-shield, .fa-ban {
        color: gray;
      }
      .pl {
        color: white;
      }
      p.controls {
        text-align: center;
      }
      #game-options, .footer {
        text-align: center;
      }
      .footer {
        text-align: center;
      }

    // %meta{:content => image_path("opengraph.png"), :property => "og:image"}/
    /[if lt IE 9]
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    .navbar.navbar-default.navbar-static-top
      .container
        .navbar-header
          %a.navbar-brand{:href => "#"} Wave Defense of Font Awesome Creeps - RPS

    .container.main-container
      .row#game-board
        .col-lg-6.col-lg-offset-3.col-md-8.col-md-offset-2
          %table.table.table-bordered
            %tr
              %td#l12 
                %span.fa-stack.fa-lg
                  %i#l12-b.fa.fa-sun-o.fa-stack-2x
                  %i#l12-f.fa.fa-scissors.fa-flip-horizontal.fa-stack-1x
              %td#l13
                %span.fa-stack.fa-lg
                  %i#l13-b.fa.fa-sun-o.fa-stack-2x
                  %i#l13-f.fa.fa-file.fa-flip-horizontal.fa-stack-1x
              %td#l14
                %span.fa-stack.fa-lg
                  %i#l14-b.fa.fa-sun-o.fa-stack-2x
                  %i#l14-f.fa.fa-thumbs-down.fa-flip-horizontal.fa-stack-1x
              %td#l15
                %span.fa-stack.fa-lg
                  %i#l15-b.fa.fa-ban.fa-stack-2x
                  %i#l15-f.fa.fa-scissors.fa-flip-horizontal.fa-stack-1x
              %td#b2
                %span.fa-stack.fa-lg
                  %i#b2-b.fa.fa-building-o.fa-2x.fa-stack-2x
              %td#r15
                %span.fa-stack.fa-lg
                  %i#r15-b.fa.fa-ban.fa-stack-2x
                  %i#r15-f.fa.fa-thumbs-down.fa-stack-1x
              %td#r14
                %span.fa-stack.fa-lg
                  %i#r14-b.fa.fa-sun-o.fa-stack-2x
                  %i#r14-f.fa.fa-scissors.fa-stack-1x
              %td#r13
                %span.fa-stack.fa-lg
                  %i#r13-b.fa.fa-sun-o.fa-stack-2x
                  %i#r13-f.fa.fa-file.fa-stack-1x
              %td#r12
                %span.fa-stack.fa-lg
                  %i#r12-b.fa.fa-sun-o.fa-stack-2x
                  %i#r12-f.fa.fa-thumbs-down.fa-stack-1x
            %tr
              %td#l11
                %span.fa-stack.fa-lg
                  %i#l11-b.fa.fa-sun-o.fa-stack-2x
                  %i#l11-f.fa.fa-thumbs-up.fa-rotate-90.fa-stack-1x
              %td.score-space{colspan: 3, rowspan: 3}
                %p 
                  Turn:
                  %span#turn 
                %p 
                  Score:
                  %span#game-score 
              %td#m7
                %span.fa-stack.fa-lg
                  %i#m7-b.fa.fa-ban.fa-stack-2x
                  %i#m7-f.fa.fa-file.fa-stack-1x
              %td.score-space{colspan: 3, rowspan: 3}
                %p 
                  Enemy Base/Shields:
                %p 
                  %span#p2base 0
                  |
                  %span#p2shields 0 0 0
                %p 
                  Your Base/Shields:
                %p 
                  %span#p1base 0
                  |
                  %span#p1shields 0 0 0
              %td#r11
                %span.fa-stack.fa-lg
                  %i#r11-b.fa.fa-sun-o.fa-stack-2x
                  %i#r11-f.fa.fa-cut.fa-rotate-90.fa-stack-1x
            %tr
              %td#l10
                %span.fa-stack.fa-lg
                  %i#l10-b.fa.fa-shield.fa-stack-2x
                  %i#l10-f.fa.fa-file.fa-stack-1x
              %td#m6
                %span.fa-stack.fa-lg
                  %i#m6-b.fa.fa-shield.fa-stack-2x
                  %i#m6-f.fa.fa-thumbs-up.fa-rotate-90.fa-stack-1x
              %td#r10
                %span.fa-stack.fa-lg
                  %i#r10-b.fa.fa-shield.fa-stack-2x
                  %i#r10-f.fa.fa-cut.fa-rotate-90.fa-stack-1x
            %tr
              %td#l9
                %span.fa-stack.fa-lg
                  %i#l9-b.fa.fa-sun-o.fa-stack-2x
                  %i#l9-f.fa.fa-cut.fa-rotate-90.fa-stack-1x
              %td#m5
                %span.fa-stack.fa-lg
                  %i#m5-b.fa.fa-sun-o.fa-stack-2x
                  %i#m5-f.fa.fa-cut.fa-rotate-90.fa-stack-1x
              %td#r9
                %span.fa-stack.fa-lg
                  %i#r9-b.fa.fa-sun-o.fa-stack-2x
                  %i#r9-f.fa.fa-cut.fa-rotate-90.fa-stack-1x
            %tr
              %td#l8
                %span.fa-stack.fa-lg
                  %i#l8-b.fa.fa-sun-o.fa-stack-2x
                  %i#l8-f.fa.fa-cut.fa-rotate-90.fa-stack-1x
              %td.score-space{colspan: 3, rowspan: 4}
                %p#player-base
                %p#player-shields
              %td#m4
                %span.fa-stack.fa-lg
                  %i#m4-b.fa.fa-sun-o.fa-stack-2x
                  %i#m4-f.fa.fa-cut.fa-rotate-90.fa-stack-1x
              %td.score-space{colspan: 3, rowspan: 4}
                %p#enemy-base
                %p#enemy-shields
              %td#r8
                %span.fa-stack.fa-lg
                  %i#r8-b.fa.fa-sun-o.fa-stack-2x
                  %i#r8-f.fa.fa-cut.fa-rotate-90.fa-stack-1x
            %tr
              %td#l7
                %span.fa-stack.fa-lg
                  %i#l7-b.fa.fa-sun-o.fa-stack-2x
                  %i#l7-f.fa.fa-cut.fa-rotate-90.fa-stack-1x
              %td#m3
                %span.fa-stack.fa-lg
                  %i#m3-b.fa.fa-sun-o.fa-stack-2x
                  %i#m3-f.fa.fa-cut.fa-rotate-90.fa-stack-1x
              %td#r7
                %span.fa-stack.fa-lg
                  %i#r7-b.fa.fa-sun-o.fa-stack-2x
                  %i#r7-f.fa.fa-file.fa-stack-1x.pl
            %tr
              %td#l6
                %span.fa-stack.fa-lg
                  %i#l6-b.fa.fa-shield.fa-stack-2x
                  %i#l6-f.fa.fa-file.fa-stack-1x.pl
              %td#m2
                %span.fa-stack.fa-lg
                  %i#m2-b.fa.fa-shield.fa-stack-2x
                  %i#m2-f.fa.fa-file.fa-stack-1x.pl
              %td#r6
                %span.fa-stack.fa-lg
                  %i#r6-b.fa.fa-shield.fa-stack-2x
                  %i#r6-f.fa.fa-file.fa-stack-1x.pl
            %tr
              %td#l5
                %span.fa-stack.fa-lg
                  %i#l5-b.fa.fa-sun-o.fa-stack-2x
                  %i#l5-f.fa.fa-thumbs-down.fa-rotate-270.fa-stack-1x.pl
              %td#m1
                %span.fa-stack.fa-lg
                  %i#m1-b.fa.fa-ban.fa-stack-2x
                  %i#m1-f.fa.fa-scissors.fa-rotate-270.fa-stack-1x.pl
              %td#r5
                %span.fa-stack.fa-lg
                  %i#r5-b.fa.fa-sun-o.fa-stack-2x
                  %i#r5-f.fa.fa-thumbs-up.fa-rotate-270.fa-stack-1x.pl
            %tr
              %td#l4
                %span.fa-stack.fa-lg
                  %i#l4-b.fa.fa-sun-o.fa-stack-2x
                  %i#l4-f.fa.fa-scissors.fa-flip-horizontal.fa-stack-1x.pl
              %td#l3
                %span.fa-stack.fa-lg
                  %i#l3-b.fa.fa-sun-o.fa-stack-2x
                  %i#l3-f.fa.fa-file.fa-stack-1x.pl
              %td#l2
                %span.fa-stack.fa-lg
                  %i#l2-b.fa.fa-sun-o.fa-stack-2x
                  %i#l2-f.fa.fa-file.fa-stack-1x.pl
              %td#l1
                %span.fa-stack.fa-lg
                  %i#l1-b.fa.fa-ban.fa-stack-2x
                  %i#l1-f.fa.fa-file.fa-stack-1x.pl
              %td#b1
                %span.fa-stack.fa-lg
                  %i#b1-b.fa.fa-building-o.fa-stack-2x.pl
              %td#r1
                %span.fa-stack.fa-lg
                  %i#r1-b.fa.fa-ban.fa-stack-2x
                  %i#r1-f.fa.fa-file.fa-stack-1x.pl
              %td#r2
                %span.fa-stack.fa-lg
                  %i#r2-b.fa.fa-sun-o.fa-stack-2x
                  %i#r2-f.fa.fa-file.fa-stack-1x.pl
              %td#r3
                %span.fa-stack.fa-lg
                  %i#r3-b.fa.fa-sun-o.fa-stack-2x
                  %i#r3-f.fa.fa-scissors.fa-stack-1x.pl
              %td#r4
                %span.fa-stack.fa-lg
                  %i#r4-b.fa.fa-sun-o.fa-stack-2x
                  %i#r4-f.fa.fa-scissors.fa-stack-1x.pl
         
          %p.controls
            %button.btn.btn-default.btn-lg
              %i.fa.fa-gears.fa-lg
            &nbsp;
            &nbsp;
            %button.btn.btn-default.btn-lg.btn-primary
              %i.fa.fa-thumbs-up.fa-rotate-270.fa-lg.pl
            %button.btn.btn-default.btn-lg
              %i.fa.fa-file.fa-lg
            %button.btn.btn-default.btn-lg
              %i.fa.fa-scissors.fa-rotate-270.fa-lg
            &nbsp;
            &nbsp;
            %button#pause.btn.btn-default.btn-lg
              %i.fa.fa-pause.fa-lg
          %p.controls
            %button.btn.btn-default.btn-lg
              %i.fa.fa-thumbs-up.fa-flip-horizontal.fa-lg
            %button.btn.btn-default.btn-lg.btn-primary
              %i.fa.fa-file.fa-lg.pl
            %button.btn.btn-default.btn-lg
              %i.fa.fa-scissors.fa-flip-horizontal.fa-lg
            &nbsp;
            &nbsp;
            %button.btn.btn-default.btn-lg
              %i.fa.fa-thumbs-up.fa-lg
            %button.btn.btn-default.btn-lg
              %i.fa.fa-file.fa-lg
            %button.btn.btn-default.btn-lg.btn-primary
              %i.fa.fa-scissors.fa-lg.pl

      .row#game-options
        .col-lg-6.col-lg-offset-3.col-md-8.col-md-offset-2
          %h2 New Game Options
          %h3 Difficulty
          .btn-group.btn-group-lg
            %button.btn.btn-default{ type: "button" } Easy
            %button.btn.btn-default{ type: "button" } Medium
            %button.btn.btn-default{ type: "button" } Hard
          %p
            the enemy changes their creeps more often at harder difficulty
          %h3 Speed
          .btn-group.btn-group-lg
            %button.btn.btn-default{ type: "button" } Slow
            %button.btn.btn-default{ type: "button" } Medium
            %button.btn.btn-default{ type: "button" } Fast
          %p
            how fast the creeps move and are spawned
          %h3 Durability
          .btn-group.btn-group-lg
            %button.btn.btn-default{ type: "button" } Low
            %button.btn.btn-default{ type: "button" } Medium
            %button.btn.btn-default{ type: "button" } High
          %p
            the amount of hits required to destroy shields and bases

          %p
            %button.btn.btn-default.btn-primary.btn-lg{ type: "button" } Start Game



      .row
        .col-lg-12-
          .footer
            %p.copyright
              Copyright &copy;2014
              %a{:href => "http://bryanbibat.net"} Bryan Bibat
            %p.powered
              Made with <a href="http://getbootstrap.com/">Bootstrap</a> and
              <a href="http://fortawesome.github.io/Font-Awesome/">Font Awesome</a>. All brand icons are trademarks of their respective owners.
            %p <a href="https://github.com/bryanbibat/homepage">Fork this on Github</a>
    %script{:type => "text/javascript", :src => "//cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js"}\
    :javascript
      var Game = {
        initialize: function() {
          this.lanes = { 
            player1: { top: [], mid: [], bot: [] },
            player2: { top: [], mid: [], bot: [] }
          };
          this.results = {};
          this.barracks = { 
            player1: { top: "paper", mid: "paper", bot: "paper" },
            player2: { top: "paper", mid: "paper", bot: "paper" }
          };
          this.health = { 
            player1: { top: 5, mid: 10, bot: 5, base: 10 },
            player2: { top: 5, mid: 10, bot: 5, base: 10 }
            //player1: { top: 20, mid: 30, bot: 20, base: 40 },
            //player2: { top: 20, mid: 30, bot: 20, base: 40 }
          };
          this.ticks = 0;
          this.started = true;
          this.ended = false;
          this.paused = false;
          this.draws = 0;
          this.player1Score = 0;
          this.player2Score = 0;
          this.spriteClasses = {
            // classes for squares where player 1 (white) is going right ie R1-R4
            // does not include player 1's pl class
            right: {
              rock: {
                player1: "fa-thumbs-up",
                player2: "fa-thumbs-up fa-flip-horizontal"
              },
              paper: {
                player1: "fa-file",
                player2: "fa-file"
              },
              scissors: {
                player1: "fa-cut",
                player2: "fa-cut fa-flip-horizontal"
              },
              clear: "fa-thumbs-up fa-flip-horizontal fa-file fa-cut pl"
            },
            // classes for squares where player 1 is going left ie L1-L4 
            left: {
              rock: {
                player1: "fa-thumbs-up fa-flip-horizontal",
                player2: "fa-thumbs-up"
              },
              paper: {
                player1: "fa-file",
                player2: "fa-file"
              },
              scissors: {
                player1: "fa-cut fa-flip-horizontal",
                player2: "fa-cut"
              },
              clear: "fa-thumbs-up fa-flip-horizontal fa-file fa-cut pl"
            },
            // classes for squares where player 1 is going right at the top ie L12-L15 
            rightTop: {
              rock: {
                player1: "fa-thumbs-down",
                player2: "fa-thumbs-down fa-flip-horizontal"
              },
              paper: {
                player1: "fa-file",
                player2: "fa-file"
              },
              scissors: {
                player1: "fa-cut",
                player2: "fa-cut fa-flip-horizontal"
              },
              clear: "fa-thumbs-down fa-flip-horizontal fa-file fa-cut pl"
            },
            // classes for squares where player 1 is going left at the top ie R12-R15 
            leftTop: {
              rock: {
                player1: "fa-thumbs-down fa-flip-horizontal",
                player2: "fa-thumbs-down"
              },
              paper: {
                player1: "fa-file",
                player2: "fa-file"
              },
              scissors: {
                player1: "fa-cut fa-flip-horizontal",
                player2: "fa-cut"
              },
              clear: "fa-thumbs-down fa-flip-horizontal fa-file fa-cut pl"
            },
            // classes for left lane ie L5-L11
            leftLane: {
              rock: {
                player1: "fa-thumbs-down fa-rotate-270",
                player2: "fa-thumbs-up fa-rotate-90"
              },
              paper: {
                player1: "fa-file",
                player2: "fa-file"
              },
              scissors: {
                player1: "fa-cut fa-rotate-270",
                player2: "fa-cut fa-rotate-90"
              },
              clear: "fa-thumbs-up fa-thumbs-down fa-rotate-270 fa-rotate-90 fa-file fa-cut pl"
            },
            // classes for left lane ie L5-L11
            midLane: {
              rock: {
                player1: "fa-thumbs-up fa-rotate-270",
                player2: "fa-thumbs-up fa-rotate-90"
              },
              paper: {
                player1: "fa-file",
                player2: "fa-file"
              },
              scissors: {
                player1: "fa-cut fa-rotate-270",
                player2: "fa-cut fa-rotate-90"
              },
              clear: "fa-thumbs-up fa-rotate-270 fa-rotate-90 fa-file fa-cut pl"
            },
            // classes for left lane ie L5-L11
            rightLane: {
              rock: {
                player1: "fa-thumbs-up fa-rotate-270",
                player2: "fa-thumbs-down fa-rotate-90"
              },
              paper: {
                player1: "fa-file",
                player2: "fa-file"
              },
              scissors: {
                player1: "fa-cut fa-rotate-270",
                player2: "fa-cut fa-rotate-90"
              },
              clear: "fa-thumbs-up fa-thumbs-down fa-rotate-270 fa-rotate-90 fa-file fa-cut pl"
            }
          }
          this.clearAllSprites();
        },
        fadeOld: function() {
          var player = "player" + (this.ticks % 2 + 1);
          var lanes = ["top", "mid", "bot"];
          var lanesAbbr = {top: "l", mid: "m", bot: "r"};
          for (var i = 0; i < 3; i++) {
            var l = lanes[i];
            for (var j = 0; j < this.lanes[player][l].length; j++) {
              var creep = this.lanes[player][l][j];
              $("#" + lanesAbbr[l] + creep.loc + "-f").fadeOut(100);
            }
          }
        },
        moveCreeps: function() {
          var player = "player" + (this.ticks % 2 + 1);
          var lanes = ["top", "mid", "bot"];
          for (var i = 0; i < 3; i++) {
            var l = lanes[i];
            for (var j = 0; j < this.lanes[player][l].length; j++) {
              var creep = this.lanes[player][l][j];
              creep.loc += (player === "player1" ? 1 : -1);
            }
          }
        },
        spawnCreeps: function() {
          var player = "player" + (this.ticks % 2 + 1);
          var lanes = ["top", "mid", "bot"];
          //debug
          //var nextVal = { rock: "paper", paper: "scissors", scissors: "rock" }
          for (var i = 0; i < 3; i++) {
            var l = lanes[i];
            this.lanes[player][l].push({ 
              value: this.barracks[player][l],
              loc: (player === "player1" ? 1 : (l == "mid" ? 7 : 15))
            });
            this.barracks[player][l] = ["rock", "paper", "scissors"][Math.floor(Math.random() * 3)];
            // this.barracks[player][l] = nextVal[this.barracks[player][l]];
          }
        },
        resolveCreepBattles: function() {
          this.results = {};
          var lanes = ["top", "mid", "bot"];
          var lanesAbbr = {top: "l", mid: "m", bot: "r"};
          for (var i = 0; i < 3; i++) {
            var l = lanes[i];
            if (this.lanes["player1"][l].length > 0 && this.lanes["player2"][l].length > 0) {
              var creep1 = this.lanes["player1"][l][0];
              var creep2 = this.lanes["player2"][l][0];
              if (creep1.loc == creep2.loc) {
                if (creep1.value == creep2.value) {
                  // draw
                  this.lanes["player1"][l].shift();
                  this.lanes["player2"][l].shift();
                  this.draws++;
                  // record result for square highlight
                  this.results[lanesAbbr[l] + creep1.loc] = "r-draw"
                } else if ((creep1.value == "rock" && creep2.value == "paper") ||
                  (creep1.value == "paper" && creep2.value == "scissors") ||
                  (creep1.value == "scissors" && creep2.value == "rock")) {
                  // player 2 wins
                  this.lanes["player1"][l].shift();
                  this.player2Score++;
                  // record result for square highlight
                  this.results[lanesAbbr[l] + creep1.loc] = "r-lose"
                } else {
                  // player 1 wins
                  this.lanes["player2"][l].shift();
                  this.player1Score++;
                  // record result for square highlight
                  this.results[lanesAbbr[l] + creep1.loc] = "r-win"
                }
              }
            }
            // resolve shields / base hits
            if (this.lanes["player1"][l].length > 0) {
              var creep1 = this.lanes["player1"][l][0];
              // shield hit
              if (creep1.loc == (l == "mid" ? 6 : 10)) {
                if (this.health["player2"][l] > 0) {
                  this.lanes["player1"][l].shift();
                  this.health["player2"][l]--;
                  var iid = "#l10";
                  if (l == "mid") {
                    iid = "#m6";
                  } else if (l == "bot") {
                    iid = "#r10";
                  }
                  $(iid + "-f").hide();
                  if (this.health["player2"][l] == 0) {
                    $(iid + "-b").removeClass("fa-shield").addClass("fa-sun-o");
                  }
                }
              }
              // base hit
              if (creep1.loc == (l == "mid" ? 7 : 15)) {
                this.lanes["player1"][l].shift();
                this.health["player2"]["base"]--;
                $("#" + lanesAbbr[l] + creep1.loc + " .fa-stack-1x").hide();
                this.results[lanesAbbr[l] + creep1.loc] = "r-win"
              }
            }
            if (this.lanes["player2"][l].length > 0) {
              var creep2 = this.lanes["player2"][l][0];
              // shield hit
              if (creep2.loc == (l == "mid" ? 2 : 6)) {
                if (this.health["player1"][l] > 0) {
                  this.lanes["player2"][l].shift();
                  this.health["player1"][l]--;
                  var iid = "#l6";
                  if (l == "mid") {
                    iid = "#m2";
                  } else if (l == "bot") {
                    iid = "#r6";
                  }
                  $(iid + "-f").hide();
                  if (this.health["player1"][l] == 0) {
                    $(iid + "-b").removeClass("fa-shield").addClass("fa-sun-o");
                  }
                }
              }
              // base hit
              if (creep2.loc == 1) {
                this.lanes["player2"][l].shift();
                this.health["player1"]["base"]--;
                $("#" + lanesAbbr[l] + creep2.loc + " .fa-stack-1x").hide();
                this.results[lanesAbbr[l] + creep2.loc] = "r-lose"
              }
            }
          }
        },
        update: function() {
          if (this.paused === true || this.ended === true || this.started === false) return;
          this.moveCreeps();
          this.spawnCreeps();
          this.resolveCreepBattles();
          this.ticks++;
        },
        clearAllSprites: function() {
          for (var i = 1; i <= 15; i++) {
            $("#l" + i + "-f").hide();
            $("#m" + i + "-f").hide();
            $("#r" + i + "-f").hide();
          }
          this.clearSprites();
        },
        clearSprites: function() {
          // var start = new Date();
          for (var i = 1; i <= 15; i++) {
            $("#l" + i).removeClass();
            $("#m" + i).removeClass();
            $("#r" + i).removeClass();
          }
          // var end = new Date();
          // console.log("Operation took " + (end.getTime() - start.getTime()) + " msec");
        },
        getDirection: function(player, lane, creep) {
          if (player == "player1") {
            if (lane == "top") {
              if (creep.loc < 5) {
                return "left";
              } else if (creep.loc < 12) {
                return "leftLane";
              } else if (creep.loc < 15) {
                return "rightTop";
              } 
            } else if (lane == "mid") {
              if (creep.loc < 7) {
                return "midLane";
              }
            } else if (lane == "bot") {
              if (creep.loc < 5) {
                return "right";
              }  else if (creep.loc < 12) {
                return "rightLane";
              } else if (creep.loc < 15) {
                return "leftTop";
              }
            }
          } else {
            if (lane == "top") {
              if (creep.loc > 11) {
                return "rightTop";
              }  else if (creep.loc > 4) {
                return "leftLane";
              } else if (creep.loc > 1) {
                return "left";
              }
            } else if (lane == "mid") {
              if (creep.loc > 1) {
                return "midLane";
              }
            } else if (lane == "bot") {
              if (creep.loc > 11) {
                return "leftTop";
              }  else if (creep.loc > 4) {
                return "rightLane";
              } else if (creep.loc > 1) {
                return "right";
              }
            }
          }
          return "outOfBounds";
        },
        drawSprites: function() {
          var player = "player" + ((this.ticks - 1) % 2 + 1);
          var lanes = ["top", "mid", "bot"];
          var lanesAbbr = {top: "l", mid: "m", bot: "r"};
          for (var i = 0; i < 3; i++) {
            var l = lanes[i];
            for (var j = 0; j < this.lanes[player][l].length; j++) {
              var creep = this.lanes[player][l][j];
              var direction = this.getDirection(player, l, creep);

              if (direction != "outOfBounds") {
                var iid = "#" + lanesAbbr[l] + creep.loc + "-f";
                var clearClass = this.spriteClasses[direction]["clear"];
                var addClass = this.spriteClasses[direction][creep.value][player] + (player == "player1" ? " pl" : "");

                (function(iid, clearClass, addClass) {
                  var drawFunc = function() {
                    $(iid).removeClass(clearClass)
                      .addClass(addClass)
                      .fadeIn(200);
                  }
                  if ($(iid).is(":visible")) {
                    $(iid).fadeOut(200, drawFunc);
                  } else {
                    setTimeout(drawFunc, 200);
                  }
                })(iid, clearClass, addClass);

              } else {
                $("#" + lanesAbbr[l] + creep.loc + "-f").hide();
              }
            }
          }
          var _this = this;
          setTimeout(function() {
            for (var loc in _this.results) {
              $("#" + loc).addClass(_this.results[loc]);
            }
            $(".r-draw .fa-stack-1x").delay(200).hide();
          }, 400);
        },
        updateScoreDisplay: function() {
          $("#turn").html("" + (Math.floor(this.ticks / 2) + 1) + "<br>(" + (this.ticks % 2 == 1 ? "Player" : "Enemy") + " turn)");
          $("#game-score").text((this.player1Score * 3) + (this.draws));
          $("#p1base").text(this.health["player1"]["base"]);
          $("#p2base").text(this.health["player2"]["base"]);
          $("#p1shields").text(this.health["player1"]["top"] + " " + this.health["player1"]["mid"] + " " + this.health["player1"]["bot"]);
          $("#p2shields").text(this.health["player2"]["top"] + " " + this.health["player2"]["mid"] + " " + this.health["player2"]["bot"]);

          if (this.health["player1"]["base"] < 10) {
            $("#player-base").html("Your base is taking<br>damage!");
          }
          if (this.health["player2"]["base"] < 10) {
            $("#enemy-base").html("You're dealing damage<br>to the enemy base!");
          }
          var playerShields = 3;
          if (this.health["player1"]["top"] == 0) { playerShields-- }
          if (this.health["player1"]["mid"] == 0) { playerShields-- }
          if (this.health["player1"]["bot"] == 0) { playerShields-- }
          if (playerShields == 2) {
            $("#player-shields").html("You've lost a shield!<br>2 remain.");
          } else if (playerShields == 1) {
            $("#player-shields").html("You've lost another<br>shield! One remains.");
          } else if (playerShields == 0) {
            $("#player-shields").html("You have no more<br>shields!");
          }
          var enemyShields = 3;
          if (this.health["player2"]["top"] == 0) { enemyShields-- }
          if (this.health["player2"]["mid"] == 0) { enemyShields-- }
          if (this.health["player2"]["bot"] == 0) { enemyShields-- }
          if (enemyShields == 2) {
            $("#enemy-shields").html("You've destroyed a<br>shield! 2 remain.");
          } else if (enemyShields == 1) {
            $("#enemy-shields").html("You've destroyed another<br>shield! One remains.");
          } else if (enemyShields == 0) {
            $("#enemy-shields").html("You have destroyed<br>all shields!");
          }
        },
        draw: function() {
          if (this.paused === true || this.ended === true || this.started === false) return;
          this.clearSprites();
          this.drawSprites();
          this.updateScoreDisplay();
        },
        run: function() {
          var _this = this;
          this.intervalId = setInterval(function() {
            _this.update();
            _this.draw();
          }, 2000);
        }
      }
      Game.initialize();
      Game.run();

      function pause() {
        Game.paused = true;
        console.log(Game.intervalId);
        clearInterval(Game.intervalId);

        $("#pause i").removeClass("fa-pause").addClass("fa-play");
        $("#pause").off().click(resume);
      }

      function resume() {
        Game.paused = false;
        Game.run();
        $("#pause i").removeClass("fa-play").addClass("fa-pause");
        $("#pause").off().click(pause);
      }

      $("#pause").click(pause);
